_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[74],{"1X7e":function(n,e,a){"use strict";a.r(e),a.d(e,"default",(function(){return l}));var o=a("mXGw"),t=a.n(o),s=a("e+1t"),p=a("kVtE"),r=t.a.createElement,i=a("VnSe");function l(n){var e=n.docs;return r(s.a,{docs:e})}l.getInitialProps=function(){var n=Object(p.a)({pageFilename:"api/collapse",requireRaw:i});return{demos:n.demos,docs:n.docs}}},Arm3:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/collapse",function(){return a("1X7e")}])},MnAq:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/Collapse/Collapse.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# Collapse API\n\n<p class="description">The API documentation of the Collapse React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport Collapse from \'@material-ui/core/Collapse\';\n// or\nimport { Collapse } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\n\nThe Collapse transition is used by the\n[Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\nIt uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n\n## Component name\n\nThe `MuiCollapse` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content node to be collapsed. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">collapsedSize</span> | <span class="prop-type">number<br>&#124;&nbsp;string</span> | <span class="prop-default">\'0px\'</span> | The width (horizontal) or height (vertical) of the container when collapsed. |\n| <span class="prop-name">component</span> | <span class="prop-type">element type</span> | <span class="prop-default">\'div\'</span> | The component used for the root node. Either a string to use a HTML element or a component.<br>\u26a0\ufe0f [Needs to be able to hold a ref](/guides/composition/#caveat-with-refs). |\n| <span class="prop-name">in</span> | <span class="prop-type">bool</span> |  | If `true`, the component will transition in. |\n| <span class="prop-name">orientation</span> | <span class="prop-type">\'horizontal\'<br>&#124;&nbsp;\'vertical\'</span> | <span class="prop-default">\'vertical\'</span> | The collapse transition orientation. |\n| <span class="prop-name">timeout</span> | <span class="prop-type">\'auto\'<br>&#124;&nbsp;number<br>&#124;&nbsp;{ appear?: number, enter?: number, exit?: number }</span> | <span class="prop-default">duration.standard</span> | The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object.<br>Set to \'auto\' to automatically calculate transition time based on height. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition#Transition-props)).\n\n## CSS\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">.MuiCollapse-root</span> | Styles applied to the root element.\n| <span class="prop-name">horizontal</span> | <span class="prop-name">.MuiCollapse-horizontal</span> | Pseudo-class applied to the root element if `orientation="horizontal"`.\n| <span class="prop-name">entered</span> | <span class="prop-name">.MuiCollapse-entered</span> | Styles applied to the root element when the transition has entered.\n| <span class="prop-name">hidden</span> | <span class="prop-name">.MuiCollapse-hidden</span> | Styles applied to the root element when the transition has exited and `collapsedSize` != 0px.\n| <span class="prop-name">wrapper</span> | <span class="prop-name">.MuiCollapse-wrapper</span> | Styles applied to the outer wrapper element.\n| <span class="prop-name">wrapperInner</span> | <span class="prop-name">.MuiCollapse-wrapperInner</span> | Styles applied to the inner wrapper element.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/next/packages/material-ui/src/Collapse/Collapse.js) for more detail.\n\n## Inheritance\n\nThe props of the [Transition](https://reactcommunity.org/react-transition-group/transition#Transition-props) component, from react-transition-group, are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Cards](/components/cards/)\n- [Lists](/components/lists/)\n- [Transitions](/components/transitions/)\n\n'},VnSe:function(n,e,a){var o={"./collapse.md":"MnAq"};function t(n){var e=s(n);return a(e)}function s(n){if(!a.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return o[n]}t.keys=function(){return Object.keys(o)},t.resolve=s,n.exports=t,t.id="VnSe"}},[["Arm3",0,2,1,3,5,4,6,7,8,9,10,11,12,13,15,16,14,17,18,19]]]);