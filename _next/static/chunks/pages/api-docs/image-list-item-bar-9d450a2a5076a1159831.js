_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[99],{AYDp:function(t,e){t.exports='---\nfilename: /packages/material-ui/src/ImageListItemBar/ImageListItemBar.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ImageListItemBar API\n\n<p class="description">The API documentation of the ImageListItemBar React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ImageListItemBar from \'@material-ui/core/ImageListItemBar\';\n// or\nimport { ImageListItemBar } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\n\n\n\n## Component name\n\nThe `MuiImageListItemBar` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">actionIcon</span> | <span class="prop-type">node</span> |  | An IconButton element to be used as secondary action target (primary action target is the tile itself). |\n| <span class="prop-name">actionPosition</span> | <span class="prop-type">\'left\'<br>&#124;&nbsp;\'right\'</span> | <span class="prop-default">\'right\'</span> | Position of secondary action IconButton. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">subtitle</span> | <span class="prop-type">node</span> |  | String or element serving as subtitle (support text). |\n| <span class="prop-name">title</span> | <span class="prop-type">node</span> |  | Title to be displayed on tile. |\n| <span class="prop-name">titlePosition</span> | <span class="prop-type">\'bottom\'<br>&#124;&nbsp;\'top\'</span> | <span class="prop-default">\'bottom\'</span> | Position of the title bar. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">.MuiImageListItemBar-root</span> | Styles applied to the root element.\n| <span class="prop-name">titlePositionBottom</span> | <span class="prop-name">.MuiImageListItemBar-titlePositionBottom</span> | Styles applied to the root element if `titlePosition="bottom"`.\n| <span class="prop-name">titlePositionTop</span> | <span class="prop-name">.MuiImageListItemBar-titlePositionTop</span> | Styles applied to the root element if `titlePosition="top"`.\n| <span class="prop-name">rootSubtitle</span> | <span class="prop-name">.MuiImageListItemBar-rootSubtitle</span> | Styles applied to the root element if a `subtitle` is provided.\n| <span class="prop-name">titleWrap</span> | <span class="prop-name">.MuiImageListItemBar-titleWrap</span> | Styles applied to the title and subtitle container element.\n| <span class="prop-name">titleWrapActionPosLeft</span> | <span class="prop-name">.MuiImageListItemBar-titleWrapActionPosLeft</span> | Styles applied to the container element if `actionPosition="left"`.\n| <span class="prop-name">titleWrapActionPosRight</span> | <span class="prop-name">.MuiImageListItemBar-titleWrapActionPosRight</span> | Styles applied to the container element if `actionPosition="right"`.\n| <span class="prop-name">title</span> | <span class="prop-name">.MuiImageListItemBar-title</span> | Styles applied to the title container element.\n| <span class="prop-name">subtitle</span> | <span class="prop-name">.MuiImageListItemBar-subtitle</span> | Styles applied to the subtitle container element.\n| <span class="prop-name">actionIcon</span> | <span class="prop-name">.MuiImageListItemBar-actionIcon</span> | Styles applied to the actionIcon if supplied.\n| <span class="prop-name">actionIconActionPosLeft</span> | <span class="prop-name">.MuiImageListItemBar-actionIconActionPosLeft</span> | Styles applied to the actionIcon if `actionPosition="left"`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/next/packages/material-ui/src/ImageListItemBar/ImageListItemBar.js) for more detail.\n\n## Demos\n\n- [Image List](/components/image-list/)\n\n'},"EX1/":function(t,e,n){var a={"./image-list-item-bar.md":"AYDp"};function s(t){var e=o(t);return n(e)}function o(t){if(!n.o(a,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return a[t]}s.keys=function(){return Object.keys(a)},s.resolve=o,t.exports=s,s.id="EX1/"},QIii:function(t,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return l}));var a=n("mXGw"),s=n.n(a),o=n("e+1t"),i=n("kVtE"),p=s.a.createElement,r=n("EX1/");function l(t){var e=t.docs;return p(o.a,{docs:e})}l.getInitialProps=function(){var t=Object(i.a)({pageFilename:"api/image-list-item-bar",requireRaw:r});return{demos:t.demos,docs:t.docs}}},nqR8:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/image-list-item-bar",function(){return n("QIii")}])}},[["nqR8",0,2,1,3,5,4,6,7,8,9,10,11,12,13,15,16,14,17,18,19]]]);