_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[82],{"06BF":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/divider",function(){return a("qB/s")}])},"387H":function(e,n,a){var t={"./divider.md":"GK7c"};function s(e){var n=p(e);return a(n)}function p(e){if(!a.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}s.keys=function(){return Object.keys(t)},s.resolve=p,e.exports=s,s.id="387H"},GK7c:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/Divider/Divider.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# Divider API\n\n<p class="description">The API documentation of the Divider React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport Divider from \'@material-ui/core/Divider\';\n// or\nimport { Divider } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\n\n\n\n## Component name\n\nThe `MuiDivider` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">absolute</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Absolutely position the element. |\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the component. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">component</span> | <span class="prop-type">elementType</span> | <span class="prop-default">children ? \'div\' : \'hr\'</span> | The component used for the root node. Either a string to use a HTML element or a component. |\n| <span class="prop-name">flexItem</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, a vertical divider will have the correct height when used in flex container. (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.) |\n| <span class="prop-name">light</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the divider will have a lighter color. |\n| <span class="prop-name">orientation</span> | <span class="prop-type">\'horizontal\'<br>&#124;&nbsp;\'vertical\'</span> | <span class="prop-default">\'horizontal\'</span> | The divider orientation. |\n| <span class="prop-name">textAlign</span> | <span class="prop-type">\'center\'<br>&#124;&nbsp;\'left\'<br>&#124;&nbsp;\'right\'</span> | <span class="prop-default">\'center\'</span> | The text alignment. |\n| <span class="prop-name">variant</span> | <span class="prop-type">\'fullWidth\'<br>&#124;&nbsp;\'inset\'<br>&#124;&nbsp;\'middle\'<br>&#124;&nbsp;string</span> | <span class="prop-default">\'fullWidth\'</span> | The variant to use. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">.MuiDivider-root</span> | Styles applied to the root element.\n| <span class="prop-name">absolute</span> | <span class="prop-name">.MuiDivider-absolute</span> | Styles applied to the root element if `absolute={true}`.\n| <span class="prop-name">inset</span> | <span class="prop-name">.MuiDivider-inset</span> | Styles applied to the root element if `variant="inset"`.\n| <span class="prop-name">fullWidth</span> | <span class="prop-name">.MuiDivider-fullWidth</span> | Styles applied to the root element if `variant="fullWidth"`.\n| <span class="prop-name">light</span> | <span class="prop-name">.MuiDivider-light</span> | Styles applied to the root element if `light={true}`.\n| <span class="prop-name">middle</span> | <span class="prop-name">.MuiDivider-middle</span> | Styles applied to the root element if `variant="middle"`.\n| <span class="prop-name">vertical</span> | <span class="prop-name">.MuiDivider-vertical</span> | Styles applied to the root element if `orientation="vertical"`.\n| <span class="prop-name">flexItem</span> | <span class="prop-name">.MuiDivider-flexItem</span> | Styles applied to the root element if `flexItem={true}`.\n| <span class="prop-name">withChildren</span> | <span class="prop-name">.MuiDivider-withChildren</span> | Styles applied to the root element if divider have text.\n| <span class="prop-name">withChildrenVertical</span> | <span class="prop-name">.MuiDivider-withChildrenVertical</span> | Styles applied to the root element if divider have text and `orientation="vertical"`.\n| <span class="prop-name">textAlignRight</span> | <span class="prop-name">.MuiDivider-textAlignRight</span> | Styles applied to the root element if `textAlign="right" orientation="horizontal"`.\n| <span class="prop-name">textAlignLeft</span> | <span class="prop-name">.MuiDivider-textAlignLeft</span> | Styles applied to the root element if `textAlign="left" orientation="horizontal"`.\n| <span class="prop-name">wrapper</span> | <span class="prop-name">.MuiDivider-wrapper</span> | Styles applied to the span children element if `orientation="horizontal"`.\n| <span class="prop-name">wrapperVertical</span> | <span class="prop-name">.MuiDivider-wrapperVertical</span> | Styles applied to the span children element if `orientation="vertical"`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/next/packages/material-ui/src/Divider/Divider.js) for more detail.\n\n## Demos\n\n- [Dividers](/components/dividers/)\n- [Lists](/components/lists/)\n\n'},"qB/s":function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return l}));var t=a("mXGw"),s=a.n(t),p=a("e+1t"),i=a("kVtE"),o=s.a.createElement,r=a("387H");function l(e){var n=e.docs;return o(p.a,{docs:n})}l.getInitialProps=function(){var e=Object(i.a)({pageFilename:"api/divider",requireRaw:r});return{demos:e.demos,docs:e.docs}}}},[["06BF",0,2,1,3,5,4,6,7,8,9,10,11,12,13,15,16,14,17,18,19]]]);