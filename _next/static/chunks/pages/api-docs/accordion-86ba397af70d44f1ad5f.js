_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[46],{CB7U:function(n,e,o){"use strict";o.r(e),o.d(e,"default",(function(){return c}));var a=o("mXGw"),s=o.n(a),t=o("e+1t"),p=o("kVtE"),r=s.a.createElement,i=o("P1je");function c(n){var e=n.docs;return r(t.a,{docs:e})}c.getInitialProps=function(){var n=Object(p.a)({pageFilename:"api/accordion",requireRaw:i});return{demos:n.demos,docs:n.docs}}},P1je:function(n,e,o){var a={"./accordion.md":"nG8R"};function s(n){var e=t(n);return o(e)}function t(n){if(!o.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}s.keys=function(){return Object.keys(a)},s.resolve=t,n.exports=s,s.id="P1je"},"k/I2":function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/accordion",function(){return o("CB7U")}])},nG8R:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/Accordion/Accordion.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# Accordion API\n\n<p class="description">The API documentation of the Accordion React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport Accordion from \'@material-ui/core/Accordion\';\n// or\nimport { Accordion } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\n\n\n\n## Component name\n\nThe `MuiAccordion` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children<abbr title="required">*</abbr></span> | <span class="prop-type">node</span> |  | The content of the accordion. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">defaultExpanded</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, expands the accordion by default. |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the accordion will be displayed in a disabled state. |\n| <span class="prop-name">expanded</span> | <span class="prop-type">bool</span> |  | If `true`, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion. |\n| <span class="prop-name">onChange</span> | <span class="prop-type">func</span> |  | Callback fired when the expand/collapse state is changed.<br><br>**Signature:**<br>`function(event: object, expanded: boolean) => void`<br>*event:* The event source of the callback. **Warning**: This is a generic event not a change event.<br>*expanded:* The `expanded` state of the accordion. |\n| <span class="prop-name">square</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, rounded corners are disabled. |\n| <span class="prop-name">TransitionComponent</span> | <span class="prop-type">elementType</span> | <span class="prop-default">Collapse</span> | The component used for the transition. [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component. |\n| <span class="prop-name">TransitionProps</span> | <span class="prop-type">object</span> |  | Props applied to the transition element. By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([Paper](/api/paper/)).\n\n## CSS\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">.MuiAccordion-root</span> | Styles applied to the root element.\n| <span class="prop-name">rounded</span> | <span class="prop-name">.MuiAccordion-rounded</span> | Styles applied to the root element if `square={false}`.\n| <span class="prop-name">expanded</span> | <span class="prop-name">.Mui-expanded</span> | Pseudo-class applied to the root element if `expanded={true}`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">.Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n| <span class="prop-name">region</span> | <span class="prop-name">.MuiAccordion-region</span> | Styles applied to the region element, the container of the children.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/next/packages/material-ui/src/Accordion/Accordion.js) for more detail.\n\n## Inheritance\n\nThe props of the [Paper](/api/paper/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Accordion](/components/accordion/)\n\n'}},[["k/I2",0,2,1,3,5,4,6,7,8,9,10,11,12,13,15,16,14,17,18,19]]]);